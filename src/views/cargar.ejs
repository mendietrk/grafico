<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cargar Datos de Piezas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Cargar Datos de Nuevas Piezas</h1>
        <p>Pega cada atributo de la pieza en una **nueva línea**, en el **orden exacto** esperado por el sistema. Asegúrate de incluir todos los campos obligatorios.</p>
        
        <form id="dataLoadForm">
            <div class="mb-3">
                <label for="data" class="form-label">Pegar datos de la pieza (una línea por atributo):</label>
                <textarea class="form-control" id="data" name="data" rows="35" placeholder="Ejemplo:
10440210
Arnitel
PB420B
11 de junio de 2025
10440210 / 14D-AE7-000
14D-AE7-000
Boot SX8.1 - 56
Phoenix D-PUP
3100934272
0.1003
B
12/5/2021
123
GKN VLG (CELAYA)
123
´0.06%
100 c +/-10 c
2hr - 3 hr
´0.04%
100.3 ± 1.5
1.29 ± 0.15
1.4 ± 0.15
1.33 ± 0.15
1.39 ± 0.15
1.03 ± 0.15
1.23 ± 0.15
1.38 ± 0.2
1.18 ± 0.15
1.09 ± 0.15
1.19 ± 0.15
1.16 ± 0.15
1.22 ± 0.15
1.21 ± 0.2
2.0 ± 0.15
1.45 ± 0.15
"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Cargar Pieza</button>
        </form>

        <div id="messages" class="mt-3"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('dataLoadForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const data = formData.get('data'); // Obtiene el string completo del textarea
            const messagesDiv = document.getElementById('messages');
            messagesDiv.innerHTML = ''; // Limpiar mensajes anteriores

            try {
                const response = await fetch('/cargar-datos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json' // ¡Importante! Enviamos un JSON
                    },
                    body: JSON.stringify({ data: data }) // Enviamos el string completo dentro de un objeto JSON
                });

                const result = await response.json();

                if (result.success) {
                    messagesDiv.innerHTML = `<div class="alert alert-success">${result.message}</div>`;
                    this.reset(); // Opcional: limpiar el formulario al éxito
                } else {
                    let errorMessage = `<div class="alert alert-danger">Error: ${result.message}</div>`;
                    if (result.errors) {
                        errorMessage += '<ul>';
                        for (const field in result.errors) {
                            errorMessage += `<li><strong>${field}</strong>: ${result.errors[field]}</li>`;
                        }
                        errorMessage += '</ul>';
                    }
                    messagesDiv.innerHTML = errorMessage;
                }
            } catch (error) {
                console.error('Error al enviar datos:', error);
                messagesDiv.innerHTML = `<div class="alert alert-danger">Error de conexión o inesperado: ${error.message}</div>`;
            }
        });
    </script>
</body>
</html>