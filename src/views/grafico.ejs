<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Gráfico de Control</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    canvas {
      max-width: 100%;
      height: auto;
      margin-bottom: 30px;
    }
    body {
      padding: 20px;
      font-family: Arial;
    }
    select {
      padding: 5px;
      margin-right: 10px;
    }
    button {
      padding: 6px 12px;
    }
  </style>
</head>
<body>

  <h2>Filtrar por Número de Parte y Revisión</h2>
  <form method="GET" action="/grafico">
    <label for="pa6">Número de Parte:</label>
    <select name="pa6" id="pa6" required onchange="this.form.submit()">
      <option value="">-- Seleccione --</option>
      <% 
        const pa6Unicos = [...new Set(partes.map(p => p.pa6))];
        pa6Unicos.forEach(p => { 
      %>
        <option value="<%= p %>" <%= p === pa6 ? 'selected' : '' %>><%= p %></option>
      <% }) %>
    </select>

    <% if (pa6) { %>
      <label for="pa7">Revisión:</label>
      <select name="pa7" id="pa7" required onchange="this.form.submit()">
        <option value="">-- Seleccione --</option>
        <% 
          partes.filter(p => p.pa6 === pa6).forEach(p => {
            const rev = p.pa7 || 'N/A';
        %>
          <option value="<%= rev %>" <%= rev === pa7 ? 'selected' : '' %>><%= rev %></option>
        <% }) %>
      </select>
    <% } %>
  </form>

  <% if (promedios.length === 0) { %>
    <p>No hay datos para mostrar con los filtros seleccionados.</p>
  <% } else { %>

    <h2>Gráfico de Medias</h2>
    <canvas id="xbarChart"></canvas>

    <h2>Gráfico de Rango</h2>
    <canvas id="rChart"></canvas>

    <script>
      const promedios = <%- JSON.stringify(promedios) %>;
      const rangos = <%- JSON.stringify(rangos) %>;
      const labels = promedios.map((_, i) => i + 1);
      const limites = <%- JSON.stringify(limites) %>;

      const linea = (valor, label, color) => ({
        label,
        data: Array(labels.length).fill(valor),
        borderColor: color,
        borderWidth: 1,
        borderDash: [5, 5],
        pointRadius: 0
      });

      // X-Bar chart
      new Chart(document.getElementById('xbarChart'), {
        type: 'line',
        data: {
          labels,
          datasets: [
            {
              label: 'Promedios',
              data: promedios,
              borderColor: 'black',
              tension: 0.3
            },
            linea(limites.x.superior, 'LSC', 'red'),
            linea(limites.x.central, 'LC', 'blue'),
            linea(limites.x.inferior, 'LIC', 'red'),
          ]
        }
      });

      // R chart
      new Chart(document.getElementById('rChart'), {
        type: 'line',
        data: {
          labels,
          datasets: [
            {
              label: 'Rangos',
              data: rangos,
              borderColor: 'black',
              tension: 0.3
            },
            linea(limites.r.superior, 'LSC', 'red'),
            linea(limites.r.central, 'LC', 'blue'),
            linea(limites.r.inferior, 'LIC', 'red'),
          ]
        }
      });
    </script>
  <% } %>
</body>
</html>


